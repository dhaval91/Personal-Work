/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.InventoryManager;


import Business.Business;
import Business.Enterprise.Enterprise;
import Business.InventoryItem;
import Business.Network.Network;
import Business.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dhaval
 */
public class ManageInventoryJPanel extends javax.swing.JPanel {
JPanel userProcessContainer;
InventoryItem selectedInventoryItem;
int selectedRow;
ArrayList<InventoryItem> itemList;
UserAccount userAccount;
Network network;
Enterprise enterprise;

     /* Creates new form ManageInventoryJPanel
     */
    public ManageInventoryJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        refreshInventoryJTable();
    }

    private void refreshInventoryJTable()
    {
        int rowCount = inventoryJTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel)inventoryJTable.getModel();
        for(int i=rowCount-1; i>=0; --i)
        {
            model.removeRow(i);
        }
        enterprise=(Enterprise)Business.getInstance().getNetworkDirectory().searchUser(userAccount, Enterprise.class.getSimpleName());
        itemList = enterprise.getInventoryCatalog().getInventoryItemList();
        if(!itemList.isEmpty()) {
            for(InventoryItem inventoryItem: itemList)
            {
                Object row[] = new Object[3];
                if(inventoryItem.getDrug() !=null )
                {row[0] = inventoryItem.getDrug().getId();
                row[1] = inventoryItem.getDrug().getBrandName();
                row[2] = String.valueOf(inventoryItem.getAvail());}

                model.addRow(row);

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        refreshJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        manageInventoryJLabel = new javax.swing.JLabel();
        addInventoryJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        refreshJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 24, -1, -1));

        inventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug ID", "Drug Name", "Drug Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        inventoryJTable.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                inventoryJTableInputMethodTextChanged(evt);
            }
        });
        jScrollPane1.setViewportView(inventoryJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 73, 366, 113));

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("BACK");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 286, 110, 30));

        manageInventoryJLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        manageInventoryJLabel.setText("Manage Inventory");
        add(manageInventoryJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        addInventoryJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addInventoryJButton.setText("Add Inventory ");
        addInventoryJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInventoryJButtonActionPerformed(evt);
            }
        });
        add(addInventoryJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        refreshInventoryJTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void inventoryJTableInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_inventoryJTableInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_inventoryJTableInputMethodTextChanged

    private void addInventoryJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInventoryJButtonActionPerformed
        // TODO add your handling code here:
        AddInventoryJPanel addInventoryJPanel = new AddInventoryJPanel(userProcessContainer, userAccount);
        userProcessContainer.add("Add Inventory", addInventoryJPanel);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);
    }//GEN-LAST:event_addInventoryJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addInventoryJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable inventoryJTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel manageInventoryJLabel;
    private javax.swing.JButton refreshJButton;
    // End of variables declaration//GEN-END:variables
}
