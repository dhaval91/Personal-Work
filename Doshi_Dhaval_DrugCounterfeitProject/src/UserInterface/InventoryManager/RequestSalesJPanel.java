/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BusinessAdminWorkAreaJPanel.java
 *
 * Created on Nov 2, 2012, 5:59:07 PM
 */
package UserInterface.InventoryManager;

import Business.Business;
import Business.Drug;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ManufacturerEnterprise;
import Business.Enterprise.WholesalerEnterprise;
import Business.InventoryItem;
import Business.Network.Network;
import Business.Order;
import Business.OrderItem;
import Business.UserAccount;
import Business.WorkRequest.SalesWorkRequest;
import Business.WorkRequest.WorkQueue;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dhaval
 */
public class RequestSalesJPanel extends javax.swing.JPanel {

    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    SalesWorkRequest salesWorkRequest;
    Drug drug;
    Enterprise enterpriseDirectory;
    ArrayList<Drug> drugList;
    ManufacturerEnterprise manufacturer;
    WorkQueue masterOrderCatalog;
    Business business;
    Order orderTemp ;
    int avail;

    /** Creates new form BusinessAdminWorkAreaJPanel */
    public RequestSalesJPanel(JPanel upc, Enterprise ent, UserAccount ua) {
        initComponents();
        orderTemp = new Order();
        enterprise = (Enterprise)ent;
        userProcessContainer = upc;
        userAccount = ua;
        Network network = (Network) Business.getInstance().getNetworkDirectory().searchUser(ua, Network.class.getSimpleName());
        Enterprise enterprise = (Enterprise) Business.getInstance().getNetworkDirectory().searchUser(ua, Enterprise.class.getSimpleName());
        if(enterprise.getClass()== WholesalerEnterprise.class)
        {
            wholesalerJComboBox.setVisible(false);
            lblWhole.setVisible(false);
        }

        manufacturerJComboBox.removeAllItems();
        for(Enterprise e : network.getEnterpriseDirectory().geteList())
        {
            if(e.getClass()== ManufacturerEnterprise.class)
            {
                manufacturerJComboBox.addItem(e);
            }
        }

        wholesalerJComboBox.removeAllItems();
        for(Enterprise e : network.getEnterpriseDirectory().geteList())
        {
            if(e.getClass()== WholesalerEnterprise.class)
            {
                wholesalerJComboBox.addItem(e);
            }
        }
    }
        private void Refresh(){
         int rowCount = drugTable2.getRowCount();
        for(int i = rowCount-1; i >= 0; i--)
        {
            ((DefaultTableModel)drugTable2.getModel()).removeRow(i);
        }

        manufacturer=(ManufacturerEnterprise)manufacturerJComboBox.getSelectedItem();
        for (Drug drug : manufacturer.getDrugCatalog().getDrugList())
        {

            Object row [] = new Object[5];
            row[0]=drug;
            row[1]=drug.getId();
            row[2]=drug.getActualPrice();
            row[3]=drug.getFloorPrice();
            row[4]=drug.getCeilingPrice();


            ((DefaultTableModel)drugTable2.getModel()).addRow(row);

        }
    }
     private void Refresh(Order order){
         int rowCount = itemListTable.getRowCount();
        for(int i = rowCount-1; i >= 0; i--)
        {
            ((DefaultTableModel)itemListTable.getModel()).removeRow(i);
        }

        for (OrderItem orderItem : order.getOrderList())
        {
            Object row [] = new Object[4];
            row[0]=orderItem;
            row[1]=orderItem.getPrice();
            row[2]=orderItem.getQuantity();
            row[3]=orderItem.getPrice()*orderItem.getQuantity();
            ((DefaultTableModel)itemListTable.getModel()).addRow(row);
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemListTable = new javax.swing.JTable();
        manufacturerJComboBox = new javax.swing.JComboBox();
        lblManu = new javax.swing.JLabel();
        lblCatalog = new javax.swing.JLabel();
        lblBrowse = new javax.swing.JLabel();
        btnView1 = new javax.swing.JButton();
        addtoCartButton6 = new javax.swing.JButton();
        lblQuantity = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        drugTable2 = new javax.swing.JTable();
        modifyQuantityJButton = new javax.swing.JButton();
        removeJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        refreshProductTableJButton = new javax.swing.JButton();
        checkOutJButton = new javax.swing.JButton();
        lblSalesPrice = new javax.swing.JLabel();
        salePriceComboBox = new javax.swing.JComboBox();
        quantityJSpinner1 = new javax.swing.JSpinner();
        wholesalerJComboBox = new javax.swing.JComboBox();
        lblWhole = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 560, -1, -1));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle.setText("Sales Request");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        itemListTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        itemListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Price", "Quantity", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(itemListTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 650, 100));

        manufacturerJComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manufacturerJComboBoxMouseClicked(evt);
            }
        });
        manufacturerJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manufacturerJComboBoxActionPerformed(evt);
            }
        });
        add(manufacturerJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 250, -1));

        lblManu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblManu.setText("Manufacturer");
        add(lblManu, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 110, 30));

        lblCatalog.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCatalog.setText("Manufacturer Product Catalog");
        add(lblCatalog, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 240, -1));

        lblBrowse.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblBrowse.setText("Browse Drugs");
        add(lblBrowse, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, -1, -1));

        btnView1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnView1.setText("View Drug Detail");
        btnView1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnView1ActionPerformed(evt);
            }
        });
        add(btnView1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 190, -1));

        addtoCartButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addtoCartButton6.setText("ADD TO CART");
        addtoCartButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtoCartButton6ActionPerformed(evt);
            }
        });
        add(addtoCartButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 290, -1, -1));

        lblQuantity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblQuantity.setText("Quantity:");
        add(lblQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, -1, -1));

        drugTable2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        drugTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Price", "Floor Price", "Ceiling Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        drugTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drugTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(drugTable2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 650, 100));

        modifyQuantityJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        modifyQuantityJButton.setText("Modify Quantity");
        modifyQuantityJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyQuantityJButtonActionPerformed(evt);
            }
        });
        add(modifyQuantityJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 500, -1, -1));

        removeJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeJButton.setText("Remove");
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });
        add(removeJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 500, -1, -1));

        refreshJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 350, -1, -1));

        refreshProductTableJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        refreshProductTableJButton.setText("Refresh");
        refreshProductTableJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshProductTableJButtonActionPerformed(evt);
            }
        });
        add(refreshProductTableJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        checkOutJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        checkOutJButton.setText("Check Out");
        checkOutJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutJButtonActionPerformed(evt);
            }
        });
        add(checkOutJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 500, -1, -1));

        lblSalesPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblSalesPrice.setText("Sale Price");
        add(lblSalesPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, 80, 30));

        salePriceComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        salePriceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salePriceComboBoxActionPerformed(evt);
            }
        });
        add(salePriceComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 290, 120, -1));

        quantityJSpinner1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(quantityJSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 290, 50, -1));

        wholesalerJComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wholesalerJComboBoxMouseClicked(evt);
            }
        });
        wholesalerJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wholesalerJComboBoxActionPerformed(evt);
            }
        });
        add(wholesalerJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, 250, -1));

        lblWhole.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblWhole.setText("Wholesaler");
        add(lblWhole, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, 110, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void manufacturerJComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manufacturerJComboBoxMouseClicked
        // TODO add your handling code here:
        Refresh();
    }//GEN-LAST:event_manufacturerJComboBoxMouseClicked

    private void manufacturerJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manufacturerJComboBoxActionPerformed
        // TODO add your handling code here:
        Refresh();
    }//GEN-LAST:event_manufacturerJComboBoxActionPerformed

    private void btnView1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnView1ActionPerformed
        // TODO add your handling code here:

        int selectedRow = drugTable2.getSelectedRow();
        if(selectedRow < 0 || selectedRow > drugTable2.getRowCount() )
        {
            JOptionPane.showMessageDialog(null,"Select a Row");
            return;}
        drug = (Drug)drugTable2.getValueAt(selectedRow, 0);

        InventoryItem  inventoryItem = null;
        ManufacturerEnterprise me = null;
        WholesalerEnterprise we = null;
        Enterprise e = (Enterprise)manufacturerJComboBox.getSelectedItem();
        if(e.getClass().getSimpleName().equalsIgnoreCase("ManufacturerEnterprise")) {
            me = (ManufacturerEnterprise)e;
            inventoryItem=me.getInventoryCatalog().search(drug);
        }
        if(e.getClass().getSimpleName().equalsIgnoreCase("WholesalerEnterprise")) {
            we = (WholesalerEnterprise)e;
            inventoryItem=we.getInventoryCatalog().search(drug);
        }
        ViewDrugsDetailJPanel vpdjp = new ViewDrugsDetailJPanel(userProcessContainer, inventoryItem);
        userProcessContainer.add("ViewDrugDetail",vpdjp);
        CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);
    }//GEN-LAST:event_btnView1ActionPerformed

    private void addtoCartButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtoCartButton6ActionPerformed
        // TODO add your handling code here:
        OrderItem orderItem;
        int selectedRow = drugTable2.getSelectedRow();
        if(selectedRow < 0 || selectedRow > drugTable2.getRowCount() )
        {
            JOptionPane.showMessageDialog(null,"Select a Drug");
            return;
        }
        Drug selectedDrug = (Drug)drugTable2.getValueAt(selectedRow,0);

        int quantity =(Integer)quantityJSpinner1.getValue();
        if(quantity <= 0)
        {
            JOptionPane.showMessageDialog(null, "Select quantity");
            return;
        }

        if(salePriceComboBox.getSelectedItem() == null)
        {
            JOptionPane.showMessageDialog( null, "Select a Sales Price");
            return;
        }
        int salePrice = (Integer)salePriceComboBox.getSelectedItem();

        if(salePrice < selectedDrug.getFloorPrice()||salePrice > selectedDrug.getCeilingPrice())
        {
            JOptionPane.showMessageDialog( null, "Enter a correct Price");
            return;
        }

        if(orderTemp.checkDrug(selectedDrug)== null)
        {
            orderItem = orderTemp.newOrderItem();
        }
        else
        {
            orderItem = orderTemp.checkDrug(selectedDrug);
        }

        orderItem.setQuantity(quantity);
        orderItem.setDrug((Drug)drugTable2.getValueAt(selectedRow, 0));
        orderItem.setPrice((Integer)salePriceComboBox.getSelectedItem());
        Refresh();
        Refresh(orderTemp);
    }//GEN-LAST:event_addtoCartButton6ActionPerformed

    private void drugTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drugTable2MouseClicked
        // TODO add your handling code here:
        int selectedRow = drugTable2.getSelectedRow();
        if(selectedRow < 0 || selectedRow > drugTable2.getRowCount() )
        {
            JOptionPane.showMessageDialog(null,"Select a Drug");
            return;
        }
        Drug selectedDrug = (Drug)drugTable2.getValueAt(selectedRow,0);

        SpinnerNumberModel model = new SpinnerNumberModel(1, 1, 100, 1);
        quantityJSpinner1.setModel(model);

        for(int price = selectedDrug.getFloorPrice(); price<= selectedDrug.getCeilingPrice();price++)
        {
            salePriceComboBox.addItem(price);
        }
    }//GEN-LAST:event_drugTable2MouseClicked

    private void modifyQuantityJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyQuantityJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = itemListTable.getSelectedRow();
        int modify ;
        if(selectedRow < 0 || selectedRow > itemListTable.getRowCount() )
        {
            JOptionPane.showMessageDialog(null,"Select a Row");
            return;
        }
        OrderItem selectedItem = (OrderItem)itemListTable.getValueAt(selectedRow, 0);
        try
        {
            modify = Integer.parseInt(JOptionPane.showInputDialog(manufacturerJComboBox, "Enter new value"));
        }
        catch(NumberFormatException n)
        {
            JOptionPane.showMessageDialog(null, "Enter a numeric value");
            return;
        }

        int totalAvail= selectedItem.getQuantity();
        if(modify == 0)
        {
            return;
        }
        if(modify <= totalAvail && modify > 0)
        {
            selectedItem.setQuantity(modify-selectedItem.getQuantity());
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Quantity not available");
        }
        Refresh();
        Refresh(orderTemp);
    }//GEN-LAST:event_modifyQuantityJButtonActionPerformed

    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = itemListTable.getSelectedRow();
        if(selectedRow < 0 || selectedRow > itemListTable.getRowCount() )
        {
            JOptionPane.showMessageDialog(null,"Select a Row");
            return;}
        OrderItem selectedItem = (OrderItem)itemListTable.getValueAt(selectedRow, 0);

        orderTemp.getOrderList().remove(selectedItem);
        Refresh();
        Refresh(orderTemp);
    }//GEN-LAST:event_removeJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        Refresh(orderTemp);
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void refreshProductTableJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshProductTableJButtonActionPerformed
        Refresh();  // TODO add your handling code here:
    }//GEN-LAST:event_refreshProductTableJButtonActionPerformed

    private void checkOutJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutJButtonActionPerformed
        // TODO add your handling code here:
        orderTemp.setStatus(WorkRequest.status.Ordered);
        orderTemp.setSender(userAccount);

        SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yy");
        Date date  = new Date();
        String cdate = sdf.format(date);
        orderTemp.setDateOfPurchase(cdate);

        ManufacturerEnterprise me = null;
        WholesalerEnterprise we = null;

        Enterprise enterprise = (Enterprise) Business.getInstance().getNetworkDirectory().searchUser(userAccount, Enterprise.class.getSimpleName());
        if(enterprise.getClass()== WholesalerEnterprise.class)
        {
            me = (ManufacturerEnterprise)manufacturerJComboBox.getSelectedItem();
            me.getSalesManagementOrganization().getWorkQueue().addWorkRequest(orderTemp);
        }
        else{
            we = (WholesalerEnterprise)wholesalerJComboBox.getSelectedItem();
            we.getSalesManagementOrganization().getWorkQueue().addWorkRequest(orderTemp);
        }
        userAccount.getSendWorkQueue().addWorkRequest(orderTemp);

        JOptionPane.showMessageDialog(null,"Drugs ordered successfully");

        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout)(userProcessContainer.getLayout());
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_checkOutJButtonActionPerformed

    private void wholesalerJComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wholesalerJComboBoxMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_wholesalerJComboBoxMouseClicked

    private void wholesalerJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wholesalerJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wholesalerJComboBoxActionPerformed

    private void salePriceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salePriceComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salePriceComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtoCartButton6;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnView1;
    private javax.swing.JButton checkOutJButton;
    private javax.swing.JTable drugTable2;
    private javax.swing.JTable itemListTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBrowse;
    private javax.swing.JLabel lblCatalog;
    private javax.swing.JLabel lblManu;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblSalesPrice;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWhole;
    private javax.swing.JComboBox manufacturerJComboBox;
    private javax.swing.JButton modifyQuantityJButton;
    private javax.swing.JSpinner quantityJSpinner1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton refreshProductTableJButton;
    private javax.swing.JButton removeJButton;
    private javax.swing.JComboBox salePriceComboBox;
    private javax.swing.JComboBox wholesalerJComboBox;
    // End of variables declaration//GEN-END:variables
}
