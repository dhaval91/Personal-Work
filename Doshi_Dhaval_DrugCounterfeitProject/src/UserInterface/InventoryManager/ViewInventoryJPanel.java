/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BusinessAdminWorkAreaJPanel.java
 *
 * Created on Nov 2, 2012, 5:59:07 PM
 */
package UserInterface.InventoryManager;

import Business.Business;
import Business.Enterprise.DrugCatalog;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Hospital;
import Business.InventoryItem;
import Business.Organization.Organization;
import Business.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dhaval
 */
public class ViewInventoryJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private ArrayList<Organization> organizationList;
    UserAccount userAccount;
    ArrayList<InventoryItem> inventoryItemList;
    //WholesaleDistributor wholesaleDistributor;
    Hospital hospital;
    DrugCatalog drugCatalog;

    /** Creates new form BusinessAdminWorkAreaJPanel */
    public ViewInventoryJPanel(JPanel userProcessContainer, UserAccount userAccount)
    {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        Refresh();
    }

    private void Refresh()
    {


        Enterprise enterprise = (Enterprise)Business.getInstance().getNetworkDirectory().searchUser(userAccount, Enterprise.class.getSimpleName());
        int rowCount = drugJTable.getRowCount();
        for(int i = rowCount-1; i>=0; i--)
        {
            ((DefaultTableModel)drugJTable.getModel()).removeRow(i);
        }
        inventoryItemList = enterprise.getInventoryCatalog().getInventoryItemList();
        for(InventoryItem i : inventoryItemList)
        {
            Object row[] = new Object[4];
            row[0] = i.getDrug().getId();
            row[1] = i.getDrug().getBrandName();
            row[2] = i.getAvail();
            row[3] = i.getDrug().getActualPrice();

           ((DefaultTableModel)drugJTable.getModel()).addRow(row);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewInventoryJLabel = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        drugJTable = new javax.swing.JTable();
        refreshJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewInventoryJLabel.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        viewInventoryJLabel.setText("View Inventory");
        add(viewInventoryJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(186, 24, -1, -1));

        backJButton.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 299, 92, -1));

        drugJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug ID", "Drug Name", "Quantity", "Actual Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(drugJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 127, 516, 90));

        refreshJButton.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 56, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        Refresh();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTable drugJTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JLabel viewInventoryJLabel;
    // End of variables declaration//GEN-END:variables
}
