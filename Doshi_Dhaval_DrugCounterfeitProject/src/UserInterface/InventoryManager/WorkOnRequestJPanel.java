/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BusinessAdminWorkAreaJPanel.java
 *
 * Created on Nov 2, 2012, 5:59:07 PM
 */
package UserInterface.InventoryManager;

import Business.Business;
import Business.Enterprise.Enterprise;
import Business.InventoryItem;
import Business.OrderItem;
import Business.UserAccount;
import Business.WorkRequest.*;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dhaval
 */
public class WorkOnRequestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    ReceiveShippmentWorkRequest req;
    Enterprise enterprise;

    /** Creates new form BusinessAdminWorkAreaJPanel */
    public WorkOnRequestJPanel(JPanel upc, ReceiveShippmentWorkRequest req, UserAccount ua) {
        initComponents();

        this.req = req;
        userProcessContainer = upc;
        userAccount = ua;
        enterprise = (Enterprise)Business.getInstance().getNetworkDirectory().searchUser(ua, Enterprise.class.getSimpleName());


    }
//        private void Refresh(ReceiveShippmentWorkRequest request){
//         int rowCount = shipJTable.getRowCount();
//        for(int i = rowCount-1; i >= 0; i--)
//        {
//            ((DefaultTableModel)shipJTable.getModel()).removeRow(i);
//        }
//
//        for (Order order: request.getShipWorkRequest().getOrder().)
//        {
//            Object row [] = new Object[4];
//            row[0]=request.getShipWorkRequest().getOrder();
//            row[1]=orderItem.getDrug().getBrandName();
//            row[2]=orderItem.getQuantity();
//            row[3]=request.getStatus();
//            ((DefaultTableModel)shipJTable.getModel()).addRow(row);
//        }
//    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        btnConfirmDelivery = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle.setText("Work On Request");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        btnConfirmDelivery.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnConfirmDelivery.setText("Confirm  Delivery");
        btnConfirmDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmDeliveryActionPerformed(evt);
            }
        });
        add(btnConfirmDelivery, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnConfirmDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmDeliveryActionPerformed
        // TODO add your handling code here:
        InventoryItem item;
         for (OrderItem orderItem : req.getShipWorkRequest().getOrder().getOrderList())
         {
             item =enterprise.getInventoryCatalog().search(orderItem.getDrug());
             if(enterprise.getInventoryCatalog().search(orderItem.getDrug())==null)
             {
                 if(item == null)
                 {
                        item = enterprise.getInventoryCatalog().newInventoryItem();
                 }

                    item.setAvail(orderItem.getQuantity());
                 item.setDrug(orderItem.getDrug());
             }
             //item.set
         }
         req.setReceiver(userAccount);
        req.setStatus(WorkRequest.status.Delivered);
        req.setResloveDate(new Date());
        req.getShipWorkRequest().getOrder().setStatus(WorkRequest.status.Delivered);
        req.getShipWorkRequest().setStatus(WorkRequest.status.Delivered);
        JOptionPane.showMessageDialog(null, "Shippment Delivered");

    }//GEN-LAST:event_btnConfirmDeliveryActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnConfirmDelivery;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
}
